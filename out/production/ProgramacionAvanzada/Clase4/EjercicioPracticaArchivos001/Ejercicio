
Construir la clase Vehículos, la cual no podrá instanciarse, con los siguientes datos miembro:
∙ double tarifaXKm
∙ double velocMax
∙ int cod_vehículo
y con las siguientes funciones miembro:
∙ constructor, que deberá tomar como parámetros obligatorios valores para los tres datos
miembro y los inicializará con dichos valores.
∙ una función para mostrar y otra para actualizar los datos miembros (individuales para cada
uno de ellos).

Construir una clase Automóvil que heredará de Vehículos y, además, tendrá los siguientes datos
miembro:
∙ int pasajeros
∙ String destino
∙ double cantKms
∙ double precioViaje
∙ String nombreArchivo

y las siguientes funciones miembro
∙ constructor, que deberá tomar como parámetros obligatorios valores para los tres datos de la
clase base y los inicializará con dichos valores y con el nombre del archivo que contiene la
información de viajes
∙ una función para mostrar y otra para actualizar los datos miembros propios (individuales para
cada uno de ellos)
∙ mostrarViajes, donde se deberán actualizar y calcular los datos miembro pasajeros, destino,
cantKms y precioViaje leyendo el archivo ingresado

Construir un programa principal en el que se deberá:
∙ instanciar un objeto de la clase Automóvil con los siguientes valores: ( 1.8, 160.00, 25,
‘V35_viaje01.txt’
∙ incluir un ciclo que terminará por fin de flujo, en el que se deberá invocar la función
mostrarViajes y además, se deberá mostrar la siguiente información:
Destino: DDDDDD Pax: PPPPPP Kms: KKKKKKK Costo: CCCCCCCC ∙ por fin
del ciclo se mostrará el total de los viajes, con el siguiente mensaje Costo total:
CCCCCCCC

El archivo V35_viaje01.txt contendrá la siguiente información:
4 Cordoba 754.45
6 Jujuy 1245.7
5 Mendoza 1045.34
8 Parana 456.87